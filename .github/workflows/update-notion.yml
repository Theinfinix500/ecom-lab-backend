name: Update Notion with Pull Request URL

on:
  pull_request:
    types: [opened, edited]

jobs:
  update-notion:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Extract Ticket ID
      id: extract
      run: |
        PR_TITLE="${{ github.event.pull_request.title }}"
        PR_BODY="${{ github.event.pull_request.body }}"
        TICKET_ID=$(echo "$PR_TITLE $PR_BODY" | grep -oE 'TASK-[0-9]+' | grep -oE '[0-9]+')
        echo "TICKET_ID=$TICKET_ID" >> $GITHUB_ENV
    
    - name: Update Notion
      if: env.TICKET_ID
      env:
        NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
        NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        TICKET_ID: ${{ env.TICKET_ID }}
        PR_URL: ${{ github.event.pull_request.html_url }}
      run: |
        PAGE_ID=$(curl -v -X POST 'https://api.notion.com/v1/databases/$NOTION_DATABASE_ID/query' \
          -H "Authorization: Bearer $NOTION_API_KEY" \
          -H "Content-Type: application/json" \
          --data '{
            "filter": {
              "property": "ID",
              "unique_id": {
                "equals": "'"$TICKET_ID"'"
              }
            }
          }' | jq -r '.results[0].id')

        if [ "$PAGE_ID" != "null" ]; then
          curl -v -X PATCH "https://api.notion.com/v1/pages/$PAGE_ID" \
            -H "Authorization: Bearer $NOTION_API_KEY" \
            -H "Content-Type: application/json" \
            --data '{
              "properties": {
                "My Github PR": {
                  "url": "'"$PR_URL"'"
                }
              }
            }'
        fi
